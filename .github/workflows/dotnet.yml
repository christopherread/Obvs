name: .NET

on:
  push:
    branches: [ master ]
    tags: ['v*' ]
    paths-ignore: ['README.md']

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Setup GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7    
      with:
        versionSpec: '5.x'
        
    - name: Determine Version
      id:   gitversion
      uses: gittools/actions/gitversion/execute@v0.9.7
      with:
        useConfigFile: true
        
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore --configuration Release -p:Version=${{ steps.gitversion.outputs.nuGetVersion }} -p:ContinuousIntegrationBuild=true -p:Deterministic=true
    - name: Test
      run: dotnet test --no-build --configuration Release --verbosity normal --filter Category!=Explicit 
    - name: Pack
      run: |
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs 
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.ActiveMQ
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.Kafka
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.Logging.NLog
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.Monitoring.AppMetrics
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.Monitoring.ElasticSearch
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.Monitoring.PerformanceCounters
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.NATS
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.NetMQ
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.RabbitMQ
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.Serialization.Json
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.Serialization.MessagePack
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.Serialization.MessagePack-CSharp
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.Serialization.NetJson
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.Serialization.Xml
        dotnet pack --no-build --configuration Release --include-symbols --output nupkgs -p:PackageVersion=${{ steps.gitversion.outputs.nuGetVersion }} Obvs.Serialization.Yaml
    - name: Publish
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }} 
      run: |
        dotnet nuget push "nupkgs/*.*" -k "$NUGET_API_KEY" -s https://api.nuget.org/v3/index.json
